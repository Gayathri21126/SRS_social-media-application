{"ast":null,"code":"var _jsxFileName = \"/home/salko/Documents/Instagram-Clone/client/src/components/messenger/Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport './messenger.css';\nimport { useEffect, useState } from \"react\";\nimport Axios from 'axios';\nimport Navbar from '../navbar/Navbar';\nimport ChatRooms from './ChatRooms/ChatRooms';\nimport Chat from './Chat/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger(_ref) {\n  _s();\n\n  let {\n    setCreatePostWindow,\n    user\n  } = _ref;\n  Axios.defaults.withCredentials = true;\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    Axios.get(`http://localhost:3001/api/conversations/${user._id}`).then(response => {\n      setConversations(response.data.sort((p1, p2) => {\n        return new Date(p2.updatedAt) - new Date(p1.updatedAt);\n      }));\n    });\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setCreatePostWindow: setCreatePostWindow,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(ChatRooms, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"O5exSWX9CCDe/tq8iR4AHPY4uSY=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/home/salko/Documents/Instagram-Clone/client/src/components/messenger/Messenger.jsx"],"names":["useEffect","useState","Axios","Navbar","ChatRooms","Chat","Messenger","setCreatePostWindow","user","defaults","withCredentials","conversations","setConversations","get","_id","then","response","data","sort","p1","p2","Date","updatedAt"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,eAAe,SAASC,SAAT,OAAgD;AAAA;;AAAA,MAA7B;AAACC,IAAAA,mBAAD;AAAsBC,IAAAA;AAAtB,GAA6B;AAG7DN,EAAAA,KAAK,CAACO,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAERE,IAAAA,KAAK,CAACW,GAAN,CAAW,2CAA0CL,IAAI,CAACM,GAAI,EAA9D,EACCC,IADD,CACOC,QAAD,IAEN;AAACJ,MAAAA,gBAAgB,CACbI,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmB,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC3B,eAAO,IAAIC,IAAJ,CAASD,EAAE,CAACE,SAAZ,IAAyB,IAAID,IAAJ,CAASF,EAAE,CAACG,SAAZ,CAAhC;AACD,OAFH,CADa,CAAhB;AAKM,KARP;AAUL,GAZM,EAYJ,CAACd,IAAD,CAZI,CAAT;AAgBA,sBACQ;AAAA,4BAAE,QAAC,MAAD;AAAQ,MAAA,mBAAmB,EAAED,mBAA7B;AAAkD,MAAA,IAAI,EAAEC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAAF,eAGA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADR;AAYH;;GAnCuBF,S;;KAAAA,S","sourcesContent":["import './messenger.css';\nimport {useEffect, useState} from \"react\"\nimport Axios from 'axios';\n\nimport Navbar from '../navbar/Navbar'\nimport ChatRooms from './ChatRooms/ChatRooms'\nimport Chat from './Chat/Chat'\n\nexport default function Messenger({setCreatePostWindow, user}) {\n\n\n  Axios.defaults.withCredentials = true;\n\n    const [conversations, setConversations] = useState([]);\n\n    useEffect(() => {\n\n            Axios.get(`http://localhost:3001/api/conversations/${user._id}`)\n            .then((response) => \n            \n            {setConversations(    \n                response.data.sort((p1, p2) => {\n                    return new Date(p2.updatedAt) - new Date(p1.updatedAt);\n                  })\n\n                );})        \n       \n      }, [user])\n    \n\n\n    return (\n            <><Navbar setCreatePostWindow={setCreatePostWindow} user={user} />\n\n\n            <div className=\"messenger\">\n                <ChatRooms user={user} />\n                <Chat user={user}/>\n               \n            </div>\n          \n</>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}