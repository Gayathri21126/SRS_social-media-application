{"ast":null,"code":"var _jsxFileName = \"/home/salko/Documents/Instagram-Clone/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { render } from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Feed from './components/feed/Feed';\nimport Messenger from './components/messenger/Messenger';\nimport Register from './components/register/Register';\nimport Login from './components/login/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({\n    username: \"user\",\n    followers: [],\n    following: [],\n    profilePicture: \"/default_avatar.jpg\"\n  });\n  const [logged, setLoged] = useState(false);\n  const [peekUser, setPeekUser] = useState({\n    username: \"user\",\n    followers: [],\n    following: [],\n    profilePicture: \"/default_avatar.jpg\"\n  });\n  const [createPostWindow, setCreatePostWindow] = useState(false);\n\n  const peekUserHandler = usrnm => {\n    Axios.get(`http://localhost:3001/api/users?user=${usrnm}`).then(res => {\n      setPeekUser(res.data);\n    });\n  };\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/auth/session').then(response => {\n      setUser(response.data.user);\n      setLogged(response.data.logged);\n    });\n  }, []); //user, setCreatePostWindow, setPeekUser, peekUserHandler\n  //setCreatePostWindow, user\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: user.username === \"user\" ? /*#__PURE__*/_jsxDEV(Feed, {\n            user: user,\n            setCreatePostWindow: setCreatePostWindow,\n            setPeekUser: setPeekUser,\n            peekUserHandler: peekUserHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 60\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            setUser: setUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 186\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            setUser: setUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setUser: setUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6a0i19vy40eZUd7Muc1SSwSWFRw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/salko/Documents/Instagram-Clone/client/src/App.js"],"names":["logo","useState","useEffect","Axios","render","BrowserRouter","Routes","Route","Feed","Messenger","Register","Login","App","user","setUser","username","followers","following","profilePicture","logged","setLoged","peekUser","setPeekUser","createPostWindow","setCreatePostWindow","peekUserHandler","usrnm","get","then","res","data","response","setLogged"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState, useEffect} from 'react'\nimport Axios from 'axios'\n\nimport { render } from \"react-dom\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nimport Feed from './components/feed/Feed'\nimport Messenger from './components/messenger/Messenger'\nimport Register from './components/register/Register'\nimport Login from './components/login/Login'\n\n\n\n\nfunction App() {\n\n  const [user, setUser] = useState(\n{    username: \"user\",\n    followers: [],\n    following: [],\n    profilePicture: \"/default_avatar.jpg\"}\n  )\n\n  const [logged, setLoged] = useState(false)\n  const [peekUser, setPeekUser] = useState(\n    {    username: \"user\",\n    followers: [],\n    following: [],\n    profilePicture: \"/default_avatar.jpg\"}\n  )\n  const [createPostWindow ,setCreatePostWindow] = useState(false)\n\n  const peekUserHandler = (usrnm) => {\n    Axios.get(`http://localhost:3001/api/users?user=${usrnm}`).then((res) => {\n      setPeekUser(res.data);})\n  }\n\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/auth/session').then((response) => {\n      setUser(response.data.user)\n      setLogged(response.data.logged)\n    })\n  }, [])\n\n//user, setCreatePostWindow, setPeekUser, peekUserHandler\n//setCreatePostWindow, user\n\n\n  return (\n    <div className=\"App\">\n      {/* <Feed user={user} setCreatePostWindow={setCreatePostWindow} setPeekUser={setPeekUser} peekUserHandler={peekUserHandler} /> */}\n\n      {/* <Messenger user ={user} setCreatePostWindow={setCreatePostWindow} /> */}\n\n      \n\n      <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={ user.username === \"user\" ? <Feed user={user} setCreatePostWindow={setCreatePostWindow} setPeekUser={setPeekUser} peekUserHandler={peekUserHandler} />  : <Login setUser={setUser}/>} />\n      <Route path=\"register\" element={<Register setUser={setUser}/>} />\n      <Route path=\"login\" element={<Login setUser={setUser}/>} />\n    </Routes>\n  </BrowserRouter>\n    \n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}