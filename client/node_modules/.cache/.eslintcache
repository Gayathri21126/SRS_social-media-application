[{"/home/salko/Documents/Instagram-Clone/client/src/index.js":"1","/home/salko/Documents/Instagram-Clone/client/src/App.js":"2","/home/salko/Documents/Instagram-Clone/client/src/components/post/Post.jsx":"3","/home/salko/Documents/Instagram-Clone/client/src/components/profile/Profile.jsx":"4","/home/salko/Documents/Instagram-Clone/client/src/components/register/Register.jsx":"5","/home/salko/Documents/Instagram-Clone/client/src/components/login/Login.jsx":"6","/home/salko/Documents/Instagram-Clone/client/src/components/navbar/Navbar.jsx":"7","/home/salko/Documents/Instagram-Clone/client/src/components/create-post/CreatePost.jsx":"8","/home/salko/Documents/Instagram-Clone/client/src/components/feed/Feed.jsx":"9","/home/salko/Documents/Instagram-Clone/client/src/components/suggestions/Suggestions.jsx":"10","/home/salko/Documents/Instagram-Clone/client/src/components/explore-profile/ExploreProfile.jsx":"11","/home/salko/Documents/Instagram-Clone/client/src/components/post/PostExpanded.jsx":"12","/home/salko/Documents/Instagram-Clone/client/src/components/messenger/Messenger.jsx":"13","/home/salko/Documents/Instagram-Clone/client/src/components/messenger/ChatRooms/ChatRooms.jsx":"14","/home/salko/Documents/Instagram-Clone/client/src/components/messenger/Chat/Chat.jsx":"15","/home/salko/Documents/Instagram-Clone/client/src/components/create-room/CreateRoom.jsx":"16","/home/salko/Documents/Instagram-Clone/client/src/reportWebVitals.js":"17"},{"size":500,"mtime":1642342971246,"results":"18","hashOfConfig":"19"},{"size":2929,"mtime":1642458499319,"results":"20","hashOfConfig":"19"},{"size":8385,"mtime":1641136781316,"results":"21","hashOfConfig":"19"},{"size":7902,"mtime":1642211064404,"results":"22","hashOfConfig":"19"},{"size":2146,"mtime":1640298871963,"results":"23","hashOfConfig":"19"},{"size":2038,"mtime":1641130035094,"results":"24","hashOfConfig":"19"},{"size":8123,"mtime":1642205473429,"results":"25","hashOfConfig":"19"},{"size":4587,"mtime":1641070880481,"results":"26","hashOfConfig":"19"},{"size":1374,"mtime":1641136562991,"results":"27","hashOfConfig":"19"},{"size":1388,"mtime":1641137218139,"results":"28","hashOfConfig":"19"},{"size":746,"mtime":1642209582259,"results":"29","hashOfConfig":"19"},{"size":7835,"mtime":1641303832549,"results":"30","hashOfConfig":"19"},{"size":1261,"mtime":1642452663957,"results":"31","hashOfConfig":"19"},{"size":5885,"mtime":1642205530710,"results":"32","hashOfConfig":"19"},{"size":6384,"mtime":1642189818784,"results":"33","hashOfConfig":"19"},{"size":4897,"mtime":1642288760569,"results":"34","hashOfConfig":"19"},{"size":362,"mtime":1642342971246,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"72ek6t",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/salko/Documents/Instagram-Clone/client/src/index.js",[],"/home/salko/Documents/Instagram-Clone/client/src/App.js",["84","85","86","87","88","89","90","91","92","93"],"/home/salko/Documents/Instagram-Clone/client/src/components/post/Post.jsx",["94","95","96","97"],"import './post.css'\nimport { MoreHoriz} from \"@material-ui/icons\"\nimport {useState, useEffect} from \"react\";\nimport Axios from 'axios'\nimport PostExpanded from './PostExpanded'\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\n\nexport default function Post({post, user,  setPeekUser, peekUserHandler}) {\n\n    Axios.defaults.withCredentials = true;\n\n    const [userProfile, setUserProfile] = useState({\n        username: \"user\"\n    })\n\n    const [liked, setLiked] = useState(false);\n\n    const [likesNumber, setLikesNumber] = useState(0);\n\n    const [timeOfPosting, setTimeOfPosting] = useState('JUST NOW');\n\n    const [addComment, setAddComment] = useState('');\n\n    const [expandPost, setExpandPost] = useState(false);\n\n    const [comments, setComments] = useState([]);\n\n\n    const likeDislikeHandler = () => {\n        Axios.put(`http://localhost:3001/api/posts/${post._id}/like`, {\n            userId: user._id\n        }).then((response) => {\n\n            //setLiked(!liked)\n            if(liked) {\n                setLiked(false)\n                setLikesNumber(likesNumber-1)}\n            else {\n                setLiked(true)\n                setLikesNumber(likesNumber+1)}\n            \n        })\n    }\n\n\n    const addCommentHandler = () => {\n       if(comments.length > 0) setComments([...comments, {value: addComment, userId: user._id}])\n       else setComments([{value: addComment, userId: user._id}]);\n\n        Axios.put(`http://localhost:3001/api/posts/${post._id}/comment`, {\n            userId: user._id,\n            value: addComment\n        }).then((response) => {\n\n             \n        })\n        setAddComment('')\n    }\n\n\n    useEffect(() => {\n\n        if(post.comments.length > 0) setComments(post.comments);\n       \n        Axios.get(`http://localhost:3001/api/users/query/${post.userId}`)\n        .then((response) => {         \n            setUserProfile(response.data);\n            if(post.likes.includes(user._id)) setLiked(true);\n            setLikesNumber(post.likes.length);\n\n         \n            const date1 = new Date(post.createdAt);\n            var time = new Date().getTime();\n            var date2 = new Date(time);\n            let difference = date2 - date1;\n            difference /= 1000;\n\n\n\n            if(difference < 60) setTimeOfPosting(Math.round(difference) + \" SECONDS AGO\")\n            else {\n                difference /= 60;\n                if(difference < 60) setTimeOfPosting(Math.round(difference) + \" MINUTES AGO\")\n                else{\n                    difference /= 60;\n                    if(difference < 24) setTimeOfPosting(Math.round(difference) + \" HOURS AGO\")\n                    else{\n                        difference /= 24;\n                        if(difference < 7) setTimeOfPosting(Math.round(difference) + \" DAYS AGO\")\n                        else{\n                            difference /= 7;\n                            if(difference < 4) setTimeOfPosting(Math.round(difference) + \" WEEKS AGO\")\n                            else{\n                                difference /= 4;\n                                setTimeOfPosting(Math.round(difference) + \" MONTHS AGO\")\n                            }\n                        }\n                    }               \n                }\n            }\n        })\n    }, [])\n\n\n    return (\n        <div className='post'>\n\n\n         \n                \n                    { expandPost && <PostExpanded \n                    liked={liked} setLiked = {setLiked} \n                    setExpandPost={setExpandPost} \n                    user={user} \n                    post={post}\n                    likesNumber={likesNumber}\n                    setLikesNumber={setLikesNumber}\n                    likeDislikeHandler = {likeDislikeHandler}\n                    userProfile={userProfile}\n                    timeOfPosting={timeOfPosting}\n                    addComment={addComment}\n                    setAddComment={setAddComment}\n                    addCommentHandler={addCommentHandler}\n                    comments={comments}\n                    peekUserHandler={peekUserHandler}\n                    />}\n           \n                    \n            <div className=\"post-top\">\n                <div className=\"user\">\n                    <img className='user-img' src={process.env.REACT_APP_PULIC_FOLDER + userProfile.profilePicture} alt=\"\" />             \n                    <Link className='link-non-dec' to=\"../user\">\n                    <span onClick={(e) => peekUserHandler(e, userProfile.username)} className=\"user-username\">{userProfile.username}</span>           \n                    </Link>\n                </div>\n                <MoreHoriz className='post-more btn-icon' />\n            </div>\n            <div className=\"post-center\">\n                <img className='post-image' src={process.env.REACT_APP_PULIC_FOLDER + \"/\" + post.img} alt=\"\" />\n            </div>\n            <div className=\"post-bottom\">\n                <div className=\"action-section\">\n\n\n                {liked ? \n                <button onClick={likeDislikeHandler} className='btn-icon'><svg aria-label=\"Unlike\"  color=\"#ed4956\" fill=\"#ed4956\" height=\"24\" role=\"img\" viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M34.6 3.1c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5s1.1-.2 1.6-.5c1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path></svg></button> \n                :\n                <button onClick={likeDislikeHandler} className='btn-icon'><svg className='icon' width='24' height='24' ><path d=\"M16.792 3.904A4.989 4.989 0 0121.5 9.122c0 3.072-2.652 4.959-5.197 7.222-2.512 2.243-3.865 3.469-4.303 3.752-.477-.309-2.143-1.823-4.303-3.752C5.141 14.072 2.5 12.167 2.5 9.122a4.989 4.989 0 014.708-5.218 4.21 4.21 0 013.675 1.941c.84 1.175.98 1.763 1.12 1.763s.278-.588 1.11-1.766a4.17 4.17 0 013.679-1.938m0-2a6.04 6.04 0 00-4.797 2.127 6.052 6.052 0 00-4.787-2.127A6.985 6.985 0 00.5 9.122c0 3.61 2.55 5.827 5.015 7.97.283.246.569.494.853.747l1.027.918a44.998 44.998 0 003.518 3.018 2 2 0 002.174 0 45.263 45.263 0 003.626-3.115l.922-.824c.293-.26.59-.519.885-.774 2.334-2.025 4.98-4.32 4.98-7.94a6.985 6.985 0 00-6.708-7.218z\"></path></svg></button> \n                \n                }\n               <button onClick={() => {setExpandPost(true)}} className='btn-icon'><svg width='24' height='24' className='icon' ><path d=\"M20.656 17.008a9.993 9.993 0 10-3.59 3.615L22 22z\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"></path></svg></button> \n\n               <button className='btn-icon'><svg width='24' height='24' className='icon' ><line fill=\"none\" stroke=\"currentColor\" strokeLinejoin=\"round\" strokeWidth=\"2\" x1=\"22\" x2=\"9.218\" y1=\"3\" y2=\"10.083\"></line><polygon fill=\"none\" points=\"11.698 20.334 22 3.001 2 3.001 9.218 10.084 11.698 20.334\" stroke=\"currentColor\" strokeLinejoin=\"round\" strokeWidth=\"2\"></polygon></svg></button>\n\n\n               <button className='btn-icon'><svg width='24' height='24' className='icon' ><polygon fill=\"none\" points=\"20 21 12 13.44 4 21 4 3 20 3 20 21\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"></polygon></svg></button> \n\n                </div>\n                <span className=\"likes\">{ likesNumber } likes</span>\n                <div className=\"comments-section\">\n                    <div className=\"comment\">\n                        \n                        <p className=\"user-comment\">\n                        <span className=\"user\">{userProfile.username}</span>\n                            {post.desc}</p>\n                    </div>\n                   { post.comments.length > 0 && <div onClick={() => {setExpandPost(true)}} className=\"more-comments\">View all {comments.length} comments</div>}\n                </div>\n                <div className=\"posting-time\">{timeOfPosting}</div>\n                <div className=\"add-comment-section\">\n                    <input onChange={(e) => {setAddComment(e.target.value)}} value={addComment} type=\"text\" placeholder='Add a comment...' name=\"\" id=\"add-comment\" className=\"add-comment-input\" />\n                    \n                    <button onClick={addCommentHandler} className=\"post-comment\">Post</button>\n                </div>\n            </div>{/**POST BOTTOM */}\n        </div>\n    )\n}\n",["98","99"],"/home/salko/Documents/Instagram-Clone/client/src/components/profile/Profile.jsx",["100","101","102","103","104","105"],"import './profile.css'\nimport { MoreHoriz, Favorite, ChatBubble} from \"@material-ui/icons\";\nimport {useEffect, useState} from \"react\"\nimport Axios from 'axios';\n\nimport Navbar from '../navbar/Navbar'\nimport PostExpanded from '../post/PostExpanded'\n\n\nexport default function Profile({user, setUser, setCreatePostWindow}) {\n\n    const [userProfile, setUserProfile] = useState({\n        username: \"user\",\n        followers: [],\n        following: [],\n        profilePicture: \"/default_avatar.jpg\"\n    })\n\n    const [currentUser, setCurrentUser] = useState({\n        username: \"user\",\n        followers: [],\n        following: [],\n        profilePicture: \"/default_avatar.jpg\"\n    })\n\n    const [posts, setPosts] = useState([]);\n    const [uploadNewAvatar, setUploadNewAvatar] = useState(false)\n    const [expandPost, setExpandPost] = useState(false);\n\n    Axios.defaults.withCredentials = true;\n\n    const [file, setFile] = useState(null);\n    const [caption, setCaption] = useState(\"\")\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        const newPost = {\n            userId: user._id,\n            desc: caption\n        }\n        if(file){\n            const data = new FormData();\n            const fileName = Date.now() + file.name;\n            data.append('name', fileName);\n            data.append('file', file);\n               \n            newPost.img = fileName;\n\n\n            try{\n                await Axios.post('http://localhost:3001/api/upload', data)\n                \n            }catch(err){}\n\n            try{\n             \n                await Axios.put('http://localhost:3001/api/users/changeavatar', {fileName : fileName})\n              \n                window.location.reload()\n            }catch(err){}\n\n        }\n    }\n\n  \n\n    useEffect(() => {\n        if(!user){\n            console.log(\"There is no user so I am running\")\n            Axios.get('http://localhost:3001/api/auth/session').then((response) => {\n                setUser(response.data.user);\n                setUserProfile(response.data.user);\n                Axios.get(`http://localhost:3001/api/posts/profile/${response.data.user.username}`)\n                .then((response) => {\n                    console.log(\"This is the data I get from this user\")\n                    console.log(response.data)\n                    setPosts(\n                    response.data.sort((p1, p2) => {\n                        return new Date(p2.createdAt) - new Date(p1.createdAt);\n                      })\n                );}\n                )\n              })\n              \n        } else {\n            console.log(\"There is a user but something is wrong\")\n        Axios.get(`http://localhost:3001/api/users?user=${user.username}`)\n        .then((response) => {   \n            \n            Axios.get('http://localhost:3001/api/auth/session').then((res) => {\n                setCurrentUser(res.data.user);})\n\n\n\n           if(response.data.username) setUserProfile(response.data);\n            console.log(response.data)\n            if(response.data.username){Axios.get(`http://localhost:3001/api/posts/profile/${user.username}`)\n            .then((response2) => {setPosts(\n                response2.data.sort((p1, p2) => {\n                    return new Date(p2.createdAt) - new Date(p1.createdAt);\n                  })\n            );})}\n        })}\n\n       \n      }, [user])\n\n\n\n    return (\n        <><Navbar setCreatePostWindow={setCreatePostWindow} user={currentUser} />\n         {uploadNewAvatar && (\n               <div className=\"upload-avatar\">\n                <div className=\"upload-avatar-wrapper\"> \n                <h4>Change Profile Photo</h4> \n                <hr/>          \n              {!file && <label className='upload-btn' htmlFor='new-post'>Upload Photo</label>}\n              {file && <p className='upload-btn' onClick={submitHandler}>Save and Finish</p>}\n                  <input\n                style={{ display:'none' }}\n                type=\"file\"\n                id=\"new-post\"\n                accept=\".png,.jpeg,.jpg\"\n                onChange={(e) => {setFile(e.target.files[0])}}\n              /> <hr/> \n              <p className=\"upload-btn rm-btn\">Remove Current Photo</p>\n               <hr/>\n               <p onClick={() => {\n                setUploadNewAvatar(false)\n            }} className=\"upload-btn cn-btn\">Cancel</p>\n            \n               </div>  </div>)}\n\n\n        <div className='profile'>\n            <div className=\"profile-info\">\n                <div\n                onClick={() => {\n                    setUploadNewAvatar(true)\n                }}\n                \n                className=\"profile-picture\">\n                    <img src={process.env.REACT_APP_PULIC_FOLDER + userProfile.profilePicture} alt=\"\" className=\"profile-icon\" />\n                </div>\n                <div className=\"profile-summary\">\n                    <div className=\"profile-summary-top\">\n                        <h2 className=\"profile-username\">{userProfile.username}</h2>\n                        {\n                            \n                        currentUser._id == userProfile._id ? <><button className=\"btn\">Edit Profile</button></>  \n                        :  <><button className=\"btn message\">Message</button>\n                        <button className=\"btn follow\">{\n                            currentUser.following.includes(userProfile._id) ? \"Following\" : \"Follow\"\n                        }</button></>}\n                        <MoreHoriz className='more-btn' />\n                    </div>\n                    <div className=\"profile-summary-center\">\n                       <p><span>{posts.length}</span>posts</p>\n                       <p><span>{userProfile.followers.length}</span>followers</p>\n                       <p><span>{userProfile.following.length}</span>following</p>\n                    </div>\n                    <div className=\"profile-summary-bottom\">\n                        {/* <p className=\"common-followers\">\n                            Followed by <span>john_1919</span>, <span>john_1919</span>,<span>john_1919</span> + 10 more\n                        </p> */}\n                    </div>\n                    \n                </div>\n                \n                </div>{/**PROFILE INFO */}\n                <div className=\"profile-posts\">\n\n\n                    {\n\n                        posts.map((p) => (\n                            \n                            <div className=\"post-item\">\n                {/* { expandPost && <PostExpanded \n                    liked={liked} \n                    setLiked = {setLiked} \n                    setExpandPost={setExpandPost} \n                    user={user} \n                    post={post}\n                    likesNumber={likesNumber}\n                    setLikesNumber={setLikesNumber}\n                    likeDislikeHandler = {likeDislikeHandler}\n                    userProfile={userProfile}\n                    timeOfPosting={timeOfPosting}\n                    addComment={addComment}\n                    setAddComment={setAddComment}\n                    addCommentHandler={addCommentHandler}\n                    comments={comments}\n                    peekUserHandler={peekUserHandler}\n                    />} */}\n                    <div className=\"post-hover\">\n                            <div className=\"stats\"><Favorite/> <span className=\"post-likes\">{p.likes.length}</span></div>\n                            <div className=\"stats\"><ChatBubble/> <span className=\"post-likes\">{p.comments.length}</span></div>\n                        </div>\n                        <img src={process.env.REACT_APP_PULIC_FOLDER +\"/\"+ p.img} alt=\"\" className=\"post-img\" />\n                        \n                    </div>\n                   \n                        ))\n\n\n              \n                    }\n\n                    \n                  \n                </div>\n        </div>\n        </> )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/register/Register.jsx",["106"],"import {useState, useEfect} from \"react\";\nimport Axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport './register.css'\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function Register({setUser}) {\n\nAxios.defaults.withCredentials = true;\n\nconst [email, setEmail] = useState(\"\")\nconst [fullName, setFullName] = useState(\"\")\nconst [username, setUsername] = useState(\"\")\nconst [password, setPassword] = useState(\"\")\n\nconst register = () => {\n    Axios.post('http://localhost:3001/api/auth/register', {\n        email: email,\n        fullName: fullName,\n        username: username,\n        password: password\n    }).then((response) => {\n        console.log(response)\n        setUser(response.data)\n    })\n}\n\n    return (\n        <div className='register'>\n            <div className='register-wrapper'>\n            <h1>Instagram</h1>\n            <p>Sign up to see photos and videos from your friends.</p>\n           \n            <Box className=\"form-inputs\">\n      <TextField \n      className='register-input' id=\"demo-helper-text-misaligned-no-helper\"\n      label=\"Email\"\n      value={email}\n      onChange={(e) => {setEmail(e.target.value)}} />\n\n      <TextField className='register-input' id=\"demo-helper-text-misaligned-no-helper\" \n      label=\"Full Name\"\n      value={fullName}\n      onChange={(e) => {setFullName(e.target.value)}} />\n\n      <TextField className='register-input' id=\"demo-helper-text-misaligned-no-helper\" \n      label=\"Username\"\n      value={username}\n      onChange={(e) => {setUsername(e.target.value)}} />\n\n      <TextField\n          id=\"standard-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          className=\"register-input\"\n          value={password}\n          onChange={(e) => {setPassword(e.target.value)}}\n        />\n        <button \n        className='register-input register-btn'\n        onClick={register}\n        >Sign up</button>\n    </Box>\n    <div className=\"signup-link\">\n    Have an account? <Link className=\"link\" to='../login'>Log in</Link>\n    </div>\n    </div>\n        </div>\n    )\n}\n",["107","108"],"/home/salko/Documents/Instagram-Clone/client/src/components/login/Login.jsx",["109","110"],"import {useState, useEfect} from \"react\";\nimport { Link } from 'react-router-dom'\n\nimport Axios from 'axios';\n\nimport './login.css'\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function Login({setUser}) {\n\nAxios.defaults.withCredentials = true;\n\nconst [username, setUsername] = useState(\"salko0719\");\nconst [password, setPassword] = useState(\"salko123\");\nconst [loginMsg, setLoginMsg] = useState(\"\")\n\nconst login = () => {\n    try{\n    Axios.post('http://localhost:3001/api/auth/login', {\n        username: username,\n        password: password\n    }).then((response) => {\n       setUser(response.data)\n    })} catch(err){console.log(err)}\n}\n\n    return (\n        <div className='register login'>\n            <div className=\"login-side-img\">\n                <img src=\"assets/login-side.png\" className=\"login-side-ram\" alt=\"\" />\n                {/* <img src=\"assets/login-side1.jpg\" className=\"login-side\" alt=\"\" /> */}\n            </div>\n            <div className='register-wrapper'>\n            <h1>Instagram</h1>\n                       \n            <Box className=\"form-inputs\">\n\n      <TextField className='register-input' id=\"demo-helper-text-misaligned-no-helper\" \n      label=\"Username\"\n      value={username}\n      onChange={(e) => {setUsername(e.target.value)}} />\n\n      <TextField\n          id=\"standard-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          className=\"register-input\"\n          value={password}\n          onChange={(e) => {setPassword(e.target.value)}}\n        />\n        <button \n        className='register-input register-btn'\n        onClick={login}\n        >Log In</button>\n        <p id=\"login-msg\">{loginMsg}</p>\n        <p className=\"forgot-password\">Forgot password?</p>\n    </Box>\n    \n    <div className=\"signup-link\">\n    Don't have an account? <Link className=\"link\" to='../register'>Sign up</Link>\n    </div>\n\n    </div>\n\n        </div>\n    )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/navbar/Navbar.jsx",["111","112","113","114"],"import './navbar.css'\nimport {useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\";\nimport Axios from 'axios'\n\nimport Profile from '../profile/Profile';\nimport Post from '../post/Post';\n\nexport default function Navbar({setCreatePostWindow, user}) {\n    Axios.defaults.withCredentials = true;\n\n    const [active, setActive] = useState(false);\n    const [profileDropdownMenu, setProfileDropdownMenu] = useState(false);\n\n\nconst logout = () => {\n    try{\n    Axios.post('http://localhost:3001/api/auth/logout')\n    .then((response) => {\n    window.location.reload();\n    })} catch(err){console.log(err)}\n}\n\n    return (\n        <div className='navbar'>\n            <div className=\"navbar-wrapper\">\n                <h1>Instagram</h1>\n                <input type=\"text\" name=\"\" placeholder='Search' id=\"\" className=\"searchbar\" />\n                <div className=\"option-menu\">\n\n               {active ?  <svg className='option-menu-icon' aria-label=\"Home\" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M22 23h-6.001a1 1 0 01-1-1v-5.455a2.997 2.997 0 10-5.993 0V22a1 1 0 01-1 1H2a1 1 0 01-1-1V11.543a1.002 1.002 0 01.31-.724l10-9.543a1.001 1.001 0 011.38 0l10 9.543a1.002 1.002 0 01.31.724V22a1 1 0 01-1 1z\" strokeWidth=\"2\"></path></svg>\n               : <Link to='../'> <svg className='option-menu-icon' aria-label=\"Home\" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M9.005 16.545a2.997 2.997 0 012.997-2.997h0A2.997 2.997 0 0115 16.545V22h7V11.543L12 2 2 11.543V22h7.005z\" fill=\"none\" stroke=\"currentColor\"  strokeWidth=\"2\"></path></svg></Link>}\n                \n\n                <Link className='link-non-dec' to=\"../messenger\">\n                <div className=\"messages-icon option-menu-icon\">\n                <svg aria-label=\"Messenger\" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M12.003 2.001a9.705 9.705 0 110 19.4 10.876 10.876 0 01-2.895-.384.798.798 0 00-.533.04l-1.984.876a.801.801 0 01-1.123-.708l-.054-1.78a.806.806 0 00-.27-.569 9.49 9.49 0 01-3.14-7.175 9.65 9.65 0 0110-9.7z\" fill=\"none\" stroke=\"currentColor\" strokeMiterlimit=\"10\" strokeWidth=\"1.739\"></path><path d=\"M17.79 10.132a.659.659 0 00-.962-.873l-2.556 2.05a.63.63 0 01-.758.002L11.06 9.47a1.576 1.576 0 00-2.277.42l-2.567 3.98a.659.659 0 00.961.875l2.556-2.049a.63.63 0 01.759-.002l2.452 1.84a1.576 1.576 0 002.278-.42z\"></path></svg>\n                <div className=\"messages-icon-label\">1</div>\n                </div></Link>\n\n                \n                <svg onClick= {()=>\n                    setCreatePostWindow(true)\n                } className=\"new-post-icon option-menu-icon\" aria-label=\"New Post\" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M2 12v3.45c0 2.849.698 4.005 1.606 4.944.94.909 2.098 1.608 4.946 1.608h6.896c2.848 0 4.006-.7 4.946-1.608C21.302 19.455 22 18.3 22 15.45V8.552c0-2.849-.698-4.006-1.606-4.945C19.454 2.7 18.296 2 15.448 2H8.552c-2.848 0-4.006.699-4.946 1.607C2.698 4.547 2 5.703 2 8.552z\" fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"></path><line fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" x1=\"6.545\" x2=\"17.455\" y1=\"12.001\" y2=\"12.001\"></line><line fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" x1=\"12.003\" x2=\"12.003\" y1=\"6.545\" y2=\"17.455\"></line></svg>\n\n\n                <svg className='option-menu-icon' aria-label=\"Find People\" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><polygon fill=\"none\" points=\"13.941 13.953 7.581 16.424 10.06 10.056 16.42 7.585 13.941 13.953\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"></polygon><polygon fillRule=\"evenodd\" points=\"10.06 10.056 13.949 13.945 7.581 16.424 10.06 10.056\"></polygon><circle cx=\"12.001\" cy=\"12.005\" fill=\"none\" r=\"10.5\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"></circle></svg>\n\n\n                <svg className='option-menu-icon' aria-label=\"Activity Feed\" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M16.792 3.904A4.989 4.989 0 0121.5 9.122c0 3.072-2.652 4.959-5.197 7.222-2.512 2.243-3.865 3.469-4.303 3.752-.477-.309-2.143-1.823-4.303-3.752C5.141 14.072 2.5 12.167 2.5 9.122a4.989 4.989 0 014.708-5.218 4.21 4.21 0 013.675 1.941c.84 1.175.98 1.763 1.12 1.763s.278-.588 1.11-1.766a4.17 4.17 0 013.679-1.938m0-2a6.04 6.04 0 00-4.797 2.127 6.052 6.052 0 00-4.787-2.127A6.985 6.985 0 00.5 9.122c0 3.61 2.55 5.827 5.015 7.97.283.246.569.494.853.747l1.027.918a44.998 44.998 0 003.518 3.018 2 2 0 002.174 0 45.263 45.263 0 003.626-3.115l.922-.824c.293-.26.59-.519.885-.774 2.334-2.025 4.98-4.32 4.98-7.94a6.985 6.985 0 00-6.708-7.218z\"></path></svg>\n\n\n\n                    <img onClick={() => {setProfileDropdownMenu(!profileDropdownMenu)}} className='option-menu-icon user-profile-icon user-img' src={process.env.REACT_APP_PULIC_FOLDER + user.profilePicture} alt=\"\" />            \n\n                  { profileDropdownMenu &&  <div className=\"profile-dropdown-menu\">\n                  <Link className='link-non-dec' to=\"../profile\"><div className=\"profile-dropdown-item\">\n                        <svg aria-label=\"Profile\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"16\" role=\"img\" viewBox=\"0 0 24 24\" width=\"16\"><circle cx=\"12.004\" cy=\"12.004\" fill=\"none\" r=\"10.5\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle><path d=\"M18.793 20.014a6.08 6.08 0 00-1.778-2.447 3.991 3.991 0 00-2.386-.791H9.38a3.994 3.994 0 00-2.386.791 6.09 6.09 0 00-1.779 2.447\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"></path><circle cx=\"12.006\" cy=\"9.718\" fill=\"none\" r=\"4.109\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"></circle></svg>\n                        <p>Profile</p></div></Link>\n                        <div className=\"profile-dropdown-item\">\n                        <svg aria-label=\"Saved\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"16\" role=\"img\" viewBox=\"0 0 24 24\" width=\"16\"><polygon fill=\"none\" points=\"20 21 12 13.44 4 21 4 3 20 3 20 21\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></polygon></svg>                        <p>Saved</p></div>\n                        <div className=\"profile-dropdown-item\">\n                        <svg aria-label=\"Settings\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"16\" role=\"img\" viewBox=\"0 0 24 24\" width=\"16\"><circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"8.635\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></circle><path d=\"M14.232 3.656a1.269 1.269 0 01-.796-.66L12.93 2h-1.86l-.505.996a1.269 1.269 0 01-.796.66m-.001 16.688a1.269 1.269 0 01.796.66l.505.996h1.862l.505-.996a1.269 1.269 0 01.796-.66M3.656 9.768a1.269 1.269 0 01-.66.796L2 11.07v1.862l.996.505a1.269 1.269 0 01.66.796m16.688-.001a1.269 1.269 0 01.66-.796L22 12.93v-1.86l-.996-.505a1.269 1.269 0 01-.66-.796M7.678 4.522a1.269 1.269 0 01-1.03.096l-1.06-.348L4.27 5.587l.348 1.062a1.269 1.269 0 01-.096 1.03m11.8 11.799a1.269 1.269 0 011.03-.096l1.06.348 1.318-1.317-.348-1.062a1.269 1.269 0 01.096-1.03m-14.956.001a1.269 1.269 0 01.096 1.03l-.348 1.06 1.317 1.318 1.062-.348a1.269 1.269 0 011.03.096m11.799-11.8a1.269 1.269 0 01-.096-1.03l.348-1.06-1.317-1.318-1.062.348a1.269 1.269 0 01-1.03-.096\" fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"2\"></path></svg>                        <p>Settings</p></div>\n                        <hr className='profile-hr'/>\n                        <div className=\"profile-dropdown-item\">\n                        <p onClick={logout}>Log Out</p></div>\n                    </div>}\n                    \n\n                </div>{/**OPTION MENU */}\n                \n            </div>\n            \n        </div>\n    )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/create-post/CreatePost.jsx",["115","116"],"import './createPost.css'\nimport {useState, useEffect} from 'react'\nimport Axios from 'axios';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function CreatePost({setCreatePostWindow, user}) {\n\n    const [file, setFile] = useState(null);\n    const [caption, setCaption] = useState(\"\")\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        const newPost = {\n            userId: user._id,\n            desc: caption\n        }\n        if(file){\n            const data = new FormData();\n            const fileName = Date.now() + file.name;\n            data.append('name', fileName);\n            data.append('file', file);\n               \n            newPost.img = fileName;\n            console.log(newPost);\n\n            try{\n                await Axios.post('http://localhost:3001/api/upload', data)\n\n            }catch(err){}\n\n            try{\n                await Axios.post('http://localhost:3001/api/posts', newPost)\n                window.location.reload();\n            }catch(err){}\n\n        }\n    }\n\n\n    return (\n        <div className='create-post'>\n            <svg onClick= {()=>\n                    setCreatePostWindow(false)\n                } className='close-create-post' aria-label=\"Close\" color=\"#ffffff\" fill=\"#ffffff\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><polyline fill=\"none\" points=\"20.643 3.357 12 12 3.353 20.647\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\"></polyline><line fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" x1=\"20.649\" x2=\"3.354\" y1=\"20.649\" y2=\"3.354\"></line></svg>\n            <div className=\"create-post-wrapper\">\n                \n               <div className=\"cnp\"> <h3>Create new post</h3> <button className='share-post-btn' onClick={submitHandler}>Share</button></div>\n\n\n               {!file && (\n               <div className=\"input-form\">\n               <svg aria-label=\"Icon to represent media such as images or videos\"  color=\"#262626\" fill=\"#262626\" height=\"77\" role=\"img\" viewBox=\"0 0 97.6 77.3\" width=\"96\"><path d=\"M16.3 24h.3c2.8-.2 4.9-2.6 4.8-5.4-.2-2.8-2.6-4.9-5.4-4.8s-4.9 2.6-4.8 5.4c.1 2.7 2.4 4.8 5.1 4.8zm-2.4-7.2c.5-.6 1.3-1 2.1-1h.2c1.7 0 3.1 1.4 3.1 3.1 0 1.7-1.4 3.1-3.1 3.1-1.7 0-3.1-1.4-3.1-3.1 0-.8.3-1.5.8-2.1z\" fill=\"currentColor\"></path><path d=\"M84.7 18.4L58 16.9l-.2-3c-.3-5.7-5.2-10.1-11-9.8L12.9 6c-5.7.3-10.1 5.3-9.8 11L5 51v.8c.7 5.2 5.1 9.1 10.3 9.1h.6l21.7-1.2v.6c-.3 5.7 4 10.7 9.8 11l34 2h.6c5.5 0 10.1-4.3 10.4-9.8l2-34c.4-5.8-4-10.7-9.7-11.1zM7.2 10.8C8.7 9.1 10.8 8.1 13 8l34-1.9c4.6-.3 8.6 3.3 8.9 7.9l.2 2.8-5.3-.3c-5.7-.3-10.7 4-11 9.8l-.6 9.5-9.5 10.7c-.2.3-.6.4-1 .5-.4 0-.7-.1-1-.4l-7.8-7c-1.4-1.3-3.5-1.1-4.8.3L7 49 5.2 17c-.2-2.3.6-4.5 2-6.2zm8.7 48c-4.3.2-8.1-2.8-8.8-7.1l9.4-10.5c.2-.3.6-.4 1-.5.4 0 .7.1 1 .4l7.8 7c.7.6 1.6.9 2.5.9.9 0 1.7-.5 2.3-1.1l7.8-8.8-1.1 18.6-21.9 1.1zm76.5-29.5l-2 34c-.3 4.6-4.3 8.2-8.9 7.9l-34-2c-4.6-.3-8.2-4.3-7.9-8.9l2-34c.3-4.4 3.9-7.9 8.4-7.9h.5l34 2c4.7.3 8.2 4.3 7.9 8.9z\" fill=\"currentColor\"></path><path d=\"M78.2 41.6L61.3 30.5c-2.1-1.4-4.9-.8-6.2 1.3-.4.7-.7 1.4-.7 2.2l-1.2 20.1c-.1 2.5 1.7 4.6 4.2 4.8h.3c.7 0 1.4-.2 2-.5l18-9c2.2-1.1 3.1-3.8 2-6-.4-.7-.9-1.3-1.5-1.8zm-1.4 6l-18 9c-.4.2-.8.3-1.3.3-.4 0-.9-.2-1.2-.4-.7-.5-1.2-1.3-1.1-2.2l1.2-20.1c.1-.9.6-1.7 1.4-2.1.8-.4 1.7-.3 2.5.1L77 43.3c1.2.8 1.5 2.3.7 3.4-.2.4-.5.7-.9.9z\" fill=\"currentColor\"></path></svg>\n               <h4>Drag photos and videos here</h4>\n               \n               \n               <label className='upload-btn' htmlFor='new-post'>Select from computer</label>\n                  <input\n                style={{ display:'none' }}\n                type=\"file\"\n                id=\"new-post\"\n                accept=\".png,.jpeg,.jpg\"\n                onChange={(e) => setFile(e.target.files[0])}\n              />\n                </div>)}\n             \n        {file && (\n          <div className=\"create-post-preview\">\n            <img className=\"shareImg\" src={URL.createObjectURL(file)} alt=\"\" />\n            <TextField\n          id=\"standard-multiline-static\"\n          className='preview-caption'\n          label=\"Caption\"\n          placeholder='Write a caption...'\n          multiline\n          rows={8}\n          defaultValue=\"\"\n          variant=\"standard\"\n          value={caption}\n          onChange={(e) => {setCaption(e.target.value)}}\n        />\n\n          </div>\n        )}\n\n\n               \n            </div>{/**create post wrapper*/}\n       {/**create post */} </div>\n    )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/feed/Feed.jsx",["117"],"import './feed.css';\nimport {useState, useEffect} from \"react\";\nimport Axios from \"axios\"\n\nimport Post from '../post/Post';\nimport PostExpanded from '../post/PostExpanded';\nimport Navbar from '../navbar/Navbar'\nimport Suggestions from '../suggestions/Suggestions'\n\nexport default function Feed({user, setCreatePostWindow, setPeekUser, peekUserHandler}) {\n\n\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n\n            Axios.get(`http://localhost:3001/api/posts/timeline/${user._id}`)\n            .then((response) => {setPosts(\n                \n                response.data.sort((p1, p2) => {\n                    return new Date(p2.createdAt) - new Date(p1.createdAt);\n                  })\n\n                );})\n        \n       \n      }, [user])\n\n    return (\n        <><Navbar user={user} setCreatePostWindow={setCreatePostWindow}/>\n        \n        <div className='feed'>\n            <div className=\"feed-wrapper\">\n                <div className=\"posts\">\n               \n                    {\n                         posts.map((p) => (\n                           <Post peekUserHandler={peekUserHandler} setPeekUser={setPeekUser} post={p} user={user} />\n                        ))\n\n                    }\n                </div>\n            </div>\n            <Suggestions peekUserHandler={peekUserHandler} user={user} />\n        </div>\n\n\n        </> )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/suggestions/Suggestions.jsx",[],"/home/salko/Documents/Instagram-Clone/client/src/components/explore-profile/ExploreProfile.jsx",["118","119","120","121"],"import './exploreProfile.css'\nimport Axios from 'axios';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\n\nexport default function ExploreProfile({sgUser, peekUserHandler}) {\n    return (\n        <div className='explore-profile'>\n                <img className=\"profile-img\" src={process.env.REACT_APP_PULIC_FOLDER + sgUser.profilePicture} alt=\"\" />\n\n            <div className=\"name-info\">\n            <Link className='link-non-dec' to=\"../user\">\n                    <div onClick={(e) => peekUserHandler(e, sgUser.username)} className=\"name\">{sgUser.username}</div>           \n                    </Link>\n              \n                <div className=\"info\">New to Instagram</div>\n            </div>\n        </div>\n    )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/post/PostExpanded.jsx",["122","123","124","125","126","127","128","129"],"import './post.css'\nimport './post-expanded.css'\nimport { MoreHoriz} from \"@material-ui/icons\"\nimport {useState, useEffect} from \"react\";\nimport Axios from 'axios'\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\n\nexport default function PostExpanded({user, post, setExpandPost, liked, likesNumber, likeDislikeHandler, peekUserHandler, userProfile, timeOfPosting, addComment, setAddComment, addCommentHandler, comments}) {\n\n\n    Axios.defaults.withCredentials = true;\n\n    const [isFollowingUser, setIsFollowingUser] = useState(false);\n    \n\n    useEffect(() => {      \n            if(user.following.includes(post.userId)) setIsFollowingUser(true)\n      \n}, []);\n\nconst [commentingUsers, setCommentingUsers] = useState([]);\nconst [filteredUser, setFilteredUser] = useState();\n\n    \nuseEffect(() => {\n    const commentersIds = [];\n    for(let i = 0; i < comments.length; i++){\n        commentersIds.push(comments[i].userId);\n    }\n    if(commentersIds.length > 0){\n    Axios.post(`http://localhost:3001/api/users/commenters`, {commentersIds:commentersIds})\n    .then((response) => {\n        setCommentingUsers(response.data);\n    })}\n}, [comments])\n\n\n    return (\n        <div className='post-expanded'>\n            <svg onClick= {()=>\n                    setExpandPost(false)\n                } className='close-create-post' aria-label=\"Close\" color=\"#ffffff\" fill=\"#ffffff\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><polyline fill=\"none\" points=\"20.643 3.357 12 12 3.353 20.647\" stroke=\"currentColor\" stroke-linecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\"></polyline><line fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" x1=\"20.649\" x2=\"3.354\" y1=\"20.649\" y2=\"3.354\"></line></svg>\n            \n            <div className=\"post-expanded-wrapper\">\n\n                <div className=\"post-expanded-left\">\n                <div className=\"post-center\">\n                <img className='post-image' src={process.env.REACT_APP_PULIC_FOLDER + \"/\" + post.img} alt=\"\" />\n            </div>\n                </div>\n                <div className=\"post-expanded-right\">\n            <div className=\"post-top\">\n                <div className=\"user\">\n                    <img className='user-img' src={process.env.REACT_APP_PULIC_FOLDER + userProfile.profilePicture} alt=\"\" />            \n                    <Link className='link-non-dec' to=\"../user\">\n                    <span onClick={(e) => peekUserHandler(e, userProfile.username)} className=\"user-username\">{userProfile.username}</span>           \n                    </Link>\n                    {user._id != userProfile._id && <> • <div className= {isFollowingUser? \"following-user-profile\" : \"follow-user-profile\"} >{isFollowingUser? 'Following' : 'Follow'}</div></>}\n                </div>\n                <MoreHoriz className='post-more btn-icon' />\n            </div>\n            {//COmment section\n            }\n            <div className=\"post-bottom\">\n            <div className=\"comments-section\">\n                    <div className=\"comment expanded-comment\">\n                    <img className='user-img' src={process.env.REACT_APP_PULIC_FOLDER + userProfile.profilePicture} alt=\"\" />   \n                        <span className=\"user\">{userProfile.username}</span>\n                        <p className=\"user-comment\">{post.desc}</p>\n                    </div>\n\n                    {   //rendering user's comments on the post\n                         comments.map((c) => {\n                      \n                            let foundUser\n                            for(var i = 0; i < commentingUsers.length; i++){\n                                if(commentingUsers[i]._id == c.userId) foundUser = commentingUsers[i]\n                            }\n                              \n                            if(foundUser){\n                            return(                           \n                            <div key={c.value} className=\"comment expanded-comment\">\n                            <img className='user-img' src={process.env.REACT_APP_PULIC_FOLDER + foundUser.profilePicture} alt=\"\" />   \n                                \n                                \n                                <p className=\"user-comment\">\n                                <Link className='link-non-dec' to=\"../user\">\n                                <span onClick={(e) => peekUserHandler(e, foundUser.username)} className=\"user\">{foundUser.username}</span>\n                                </Link>\n                                    {c.value}</p>\n                            </div>\n                        )} else{\n                            return(<></>)\n                        }})\n                    }\n\n\n                  \n                </div>\n            </div>\n\n            <div className=\"post-bottom post-bottom-expanded\">\n                <div className=\"action-section\">\n\n\n                {liked ? \n                <button onClick={likeDislikeHandler} className='btn-icon'><svg aria-label=\"Unlike\" class=\"_8-yf5 \" color=\"#ed4956\" fill=\"#ed4956\" height=\"24\" role=\"img\" viewBox=\"0 0 48 48\" width=\"24\"><path d=\"M34.6 3.1c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5s1.1-.2 1.6-.5c1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path></svg></button> \n                :\n                <button onClick={likeDislikeHandler} className='btn-icon'><svg className='icon' width='24' height='24' ><path d=\"M16.792 3.904A4.989 4.989 0 0121.5 9.122c0 3.072-2.652 4.959-5.197 7.222-2.512 2.243-3.865 3.469-4.303 3.752-.477-.309-2.143-1.823-4.303-3.752C5.141 14.072 2.5 12.167 2.5 9.122a4.989 4.989 0 014.708-5.218 4.21 4.21 0 013.675 1.941c.84 1.175.98 1.763 1.12 1.763s.278-.588 1.11-1.766a4.17 4.17 0 013.679-1.938m0-2a6.04 6.04 0 00-4.797 2.127 6.052 6.052 0 00-4.787-2.127A6.985 6.985 0 00.5 9.122c0 3.61 2.55 5.827 5.015 7.97.283.246.569.494.853.747l1.027.918a44.998 44.998 0 003.518 3.018 2 2 0 002.174 0 45.263 45.263 0 003.626-3.115l.922-.824c.293-.26.59-.519.885-.774 2.334-2.025 4.98-4.32 4.98-7.94a6.985 6.985 0 00-6.708-7.218z\"></path></svg></button> \n                \n                }\n               <button className='btn-icon'><svg width='24' height='24' className='icon' ><path d=\"M20.656 17.008a9.993 9.993 0 10-3.59 3.615L22 22z\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"></path></svg></button> \n\n               <button className='btn-icon'><svg width='24' height='24' className='icon' ><line fill=\"none\" stroke=\"currentColor\" strokeLinejoin=\"round\" strokeWidth=\"2\" x1=\"22\" x2=\"9.218\" y1=\"3\" y2=\"10.083\"></line><polygon fill=\"none\" points=\"11.698 20.334 22 3.001 2 3.001 9.218 10.084 11.698 20.334\" stroke=\"currentColor\" strokeLinejoin=\"round\" strokeWidth=\"2\"></polygon></svg></button>\n\n\n               <button className='btn-icon'><svg width='24' height='24' className='icon' ><polygon fill=\"none\" points=\"20 21 12 13.44 4 21 4 3 20 3 20 21\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"></polygon></svg></button> \n\n                </div>\n                <span className=\"likes\">{ likesNumber } likes</span>\n            \n                <div className=\"posting-time\">{timeOfPosting}</div>\n                <div className=\"add-comment-section\">\n                    <input onChange={(e) => {setAddComment(e.target.value)}} value={addComment} type=\"text\" placeholder='Add a comment...' name=\"\" id=\"\" className=\"add-comment-input\" />\n                    \n                    <button onClick={addCommentHandler} className=\"post-comment\">Post</button>\n                </div>\n                </div>\n            </div>{/**POST BOTTOM */}\n            </div>\n        </div>\n            \n    )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/messenger/Messenger.jsx",["130"],"/home/salko/Documents/Instagram-Clone/client/src/components/messenger/ChatRooms/ChatRooms.jsx",["131","132","133","134","135","136","137","138","139","140","141","142"],"import './chatRooms.css';\nimport {useEffect, useState, useRef} from \"react\"\nimport Axios from 'axios';\nimport {io} from 'socket.io-client';\n\nexport default function ChatRooms({user, activeRoom, setActiveRoom, setShowCreateRoomWindow, socket}) {\n\n\n\n    Axios.defaults.withCredentials = true;\n\n    const [conversations, setConversations] = useState([]);\n    const [chatRoomId, setChatRoomId] = useState(\"0\");\n    const [allChatMembers, setAllChatMembers] = useState([]);\n    const [conversationStatus, setConversationStatus] = useState([])\n\n\n\n    useEffect(()=> {\n        if(activeRoom) setChatRoomId(activeRoom._id)\n\n        \n    },[activeRoom])\n\n    useEffect(()=>{\n        if(socket.current){ socket.current.on('receive_message', (data) => {\n            console.log(data)\n                for(let i = 0; i < conversations.length; i++){\n                    if(conversations._id == data.room){\n                        conversations[i].status = data.message; \n                        setConversations(conversations)\n                    }\n                }})}\n    }, [conversations])\n\n    useEffect(() => {\n            Axios.get(`http://localhost:3001/api/conversations/${user._id}`)\n            .then((response) => \n            {setConversations(response.data.sort((p1, p2) => {\n                    return new Date(p2.updatedAt) - new Date(p1.updatedAt)}));\n\n            //  socket.current.emit(\"rooms\", conversations)\n            //  console.log(conversations)\n            })        \n       \n      }, [user])\n\n      useEffect(() => {\n        let chatRooms = [];\n\n        for(let i = 0; i < conversations.length; i++){\n            chatRooms.push(conversations[i]._id)\n        }\n        if(chatRooms.length){socket.current.emit(\"join_rooms\", chatRooms)}\n\n       let chatMembers = []\n        for(let i = 0; i < conversations.length; i++){\n            if(conversations[i].name == \"auto\")\n            {chatMembers.push(conversations[i].members[1])\n            chatMembers.push(conversations[i].members[0])\n            \n                if(conversations[i].members[0] != user._id){\n                    Axios.get(`http://localhost:3001/api/users/query/${conversations[i].members[0]}`).then((response) => {\n                        console.log(response.data)\n                        conversations[i].conversationImage = response.data.profilePicture\n                        conversations[i].name = response.data.username\n                    })\n                }\n\n                else if(conversations[i].members[1] != user._id){\n                    Axios.get(`http://localhost:3001/api/users/query/${conversations[i].members[1]}`).then((response) => {\n                        conversations[i].conversationImage = response.data.profilePicture\n                        conversations[i].name = response.data.username\n                    })\n                }\n\n\n\n        }\n        }\n\n\n        if(chatMembers.length > 0){\n        Axios.post(`http://localhost:3001/api/users/commenters`, {commentersIds:chatMembers})\n        .then((response) => {\n            setAllChatMembers(response.data);\n        })}\n       \n\n      }, [conversations])\n\n    return (\n        <div className='chat-rooms'>\n            <div className=\"chat-rooms-top\">\n                <div className=\"user\">\n                    <span>{user.username}</span>\n                    <svg aria-label=\"Down Chevron Icon\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"20\" role=\"img\" viewBox=\"0 0 24 24\" width=\"20\"><path d=\"M21 17.502a.997.997 0 01-.707-.293L12 8.913l-8.293 8.296a1 1 0 11-1.414-1.414l9-9.004a1.03 1.03 0 011.414 0l9 9.004A1 1 0 0121 17.502z\"></path></svg>\n                </div>\n                <div onClick={() => {setShowCreateRoomWindow(true)}} className=\"new-post\">\n                <svg aria-label=\"New Message\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M12.202 3.203H5.25a3 3 0 00-3 3V18.75a3 3 0 003 3h12.547a3 3 0 003-3v-6.952\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></path><path d=\"M10.002 17.226H6.774v-3.228L18.607 2.165a1.417 1.417 0 012.004 0l1.224 1.225a1.417 1.417 0 010 2.004z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></path><line fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"16.848\" x2=\"20.076\" y1=\"3.924\" y2=\"7.153\"></line></svg>\n                </div>\n            </div>\n            <div className=\"chat-rooms-main\">\n\n                        {\n                         conversations.map((c) => (\n                           \n                            <div onClick={()=>{\n                                setActiveRoom(c)\n                            }} \n                            \n                            className= {chatRoomId === c._id ? \"chat-room chat-room-active\" : \"chat-room\"}  \n\n                            key={c._id}>                               \n                            <div className=\"chat-room-icon\">\n                             {c.conversationImage == \"auto\" ?\n                                  <img src={process.env.REACT_APP_PULIC_FOLDER + \"/default_avatar.jpg\"} alt=\"\" />:\n                                  <img src={process.env.REACT_APP_PULIC_FOLDER + c.conversationImage} alt=\"\" />\n                                 }\n                                 <div className=\"active-now\"></div>\n                            </div>\n                            <div className=\"chat-room-info\">\n                                <div className=\"chat-room-name\">{c.name}</div>\n                                <div key={c._id + \"dasdsa\"} className=\"chat-room-status\">{c.status}</div>\n                            </div>\n                        </div>\n\n                        ))\n                         }\n\n            </div>\n        </div>\n    )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/messenger/Chat/Chat.jsx",["143","144","145","146","147"],"import './chat.css'\nimport {useEffect, useState, useRef} from \"react\"\nimport Axios from 'axios';\n\nexport default function Chat({user, activeRoom, socket}) {\n\n    Axios.defaults.withCredentials = true;\n\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [newMessage, setNewMessage] = useState('')\n    const messagesEndRef = useRef(null)\n\n    const scrollToBottom = () => {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n    \n    const sendMessageHandler = () => {\n        if(messages.length > 0) setMessages([...messages, {text: message, sender: user._id}])\n        else setMessages([{text: message, sender: user._id}]);\n\n        socket.current.emit(\"send_message\", {message: message, room:activeRoom._id })\n \n         Axios.post(\"http://localhost:3001/api/messages\", {\n            sender: user._id,\n            text: message,\n            conversationId: activeRoom._id\n         }).then((response) => {\n \n              \n         })\n         setMessage('')\n     }\n     useEffect(() => {\n        scrollToBottom()\n      }, [messages]);\n    \n     useEffect(() => {\n      if(activeRoom) { if(newMessage.room  == activeRoom._id){\n         if(messages.length > 0) setMessages([...messages, {text: newMessage.message, sender: \"dadada\"}])\n         else setMessages([{text: newMessage.message, sender: \"datata\"}]);}}\n     }, [newMessage])\n\n    useEffect(() => {\n\n       if(socket.current){ socket.current.on('receive_message', (data) => {\n        setNewMessage(data)\n        })}\n\n           if(activeRoom) {Axios.get(`http://localhost:3001/api/messages/${activeRoom._id}`)\n            .then((response) => \n            \n            {setMessages(    \n                response.data.sort((p1, p2) => {\n                    return new Date(p1.createdAt) - new Date(p2.createdAt);\n                  })\n\n                );})  }  else console.log(\"there are no messages in: \" + activeRoom)    \n       \n      }, [activeRoom])\n\n\n    return (\n        <div className='chat'>\n            <div className=\"chat-top\">\n\n\n           {activeRoom && <div className=\"chat-room\">\n                    <div className=\"chat-room-icon\">\n                        <img src={process.env.REACT_APP_PULIC_FOLDER + activeRoom.conversationImage} alt=\"\" />\n                    </div>\n                    <div className=\"chat-room-info\">\n                        <div className=\"chat-room-name\">{activeRoom.name}</div>\n                        <div className=\"chat-room-status\">Active now</div>\n                    </div>\n                </div>}\n\n                <svg aria-label=\"View Thread Details\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><circle cx=\"12.001\" cy=\"12.005\" fill=\"none\" r=\"10.5\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></circle><circle cx=\"11.819\" cy=\"7.709\" r=\"1.25\"></circle><line fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" x1=\"10.569\" x2=\"13.432\" y1=\"16.777\" y2=\"16.777\"></line><polyline fill=\"none\" points=\"10.569 11.05 12 11.05 12 16.777\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></polyline></svg>\n\n            </div>\n            <div className=\"chat-center\">\n                    {\n                         messages.map((m) => (\n                            <div key={m._id}\n                            \n                           className= {m.sender == user._id ? \"message users-message\" : \"message\"}>\n                                {m.text}\n                        </div>\n                        ))\n\n                    }\n            <div ref={messagesEndRef} />\n            </div>{/**CHAT CENTER */}\n\n            <div className=\"chat-bottom\">\n                <div className=\"message-input\">\n                <svg aria-label=\"Emoji\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M15.83 10.997a1.167 1.167 0 101.167 1.167 1.167 1.167 0 00-1.167-1.167zm-6.5 1.167a1.167 1.167 0 10-1.166 1.167 1.167 1.167 0 001.166-1.167zm5.163 3.24a3.406 3.406 0 01-4.982.007 1 1 0 10-1.557 1.256 5.397 5.397 0 008.09 0 1 1 0 00-1.55-1.263zM12 .503a11.5 11.5 0 1011.5 11.5A11.513 11.513 0 0012 .503zm0 21a9.5 9.5 0 119.5-9.5 9.51 9.51 0 01-9.5 9.5z\"></path></svg>\n                    <input value={message} \n                    onChange={(e)=>{setMessage(e.target.value)}}\n                    placeholder='Message...' className='msg-input' type=\"text\" name=\"\" id=\"\" />\n                    {\n                        message == '' ?\n                        <><svg aria-label=\"Add Photo or Video\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M6.549 5.013A1.557 1.557 0 108.106 6.57a1.557 1.557 0 00-1.557-1.557z\" fill-rule=\"evenodd\"></path><path d=\"M2 18.605l3.901-3.9a.908.908 0 011.284 0l2.807 2.806a.908.908 0 001.283 0l5.534-5.534a.908.908 0 011.283 0l3.905 3.905\" fill=\"none\" stroke=\"currentColor\" stroke-linejoin=\"round\" stroke-width=\"2\"></path><path d=\"M18.44 2.004A3.56 3.56 0 0122 5.564h0v12.873a3.56 3.56 0 01-3.56 3.56H5.568a3.56 3.56 0 01-3.56-3.56V5.563a3.56 3.56 0 013.56-3.56z\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></path></svg>\n                    <svg aria-label=\"Like\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M16.792 3.904A4.989 4.989 0 0121.5 9.122c0 3.072-2.652 4.959-5.197 7.222-2.512 2.243-3.865 3.469-4.303 3.752-.477-.309-2.143-1.823-4.303-3.752C5.141 14.072 2.5 12.167 2.5 9.122a4.989 4.989 0 014.708-5.218 4.21 4.21 0 013.675 1.941c.84 1.175.98 1.763 1.12 1.763s.278-.588 1.11-1.766a4.17 4.17 0 013.679-1.938m0-2a6.04 6.04 0 00-4.797 2.127 6.052 6.052 0 00-4.787-2.127A6.985 6.985 0 00.5 9.122c0 3.61 2.55 5.827 5.015 7.97.283.246.569.494.853.747l1.027.918a44.998 44.998 0 003.518 3.018 2 2 0 002.174 0 45.263 45.263 0 003.626-3.115l.922-.824c.293-.26.59-.519.885-.774 2.334-2.025 4.98-4.32 4.98-7.94a6.985 6.985 0 00-6.708-7.218z\"></path></svg></>\n                    :\n                    <button onClick={sendMessageHandler}  className=\"post-comment\">Send</button>\n                    }\n               </div>\n            </div>\n\n        </div>\n    )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/components/create-room/CreateRoom.jsx",["148","149","150","151","152"],"import './createRoom.css'\nimport {useEffect, useState} from 'react'\nimport Axios from 'axios'\n\nexport default function CreateRoom({setShowCreateRoomWindow, user}) {\n    Axios.defaults.withCredentials = true;\n\n    const [allUsers, setAllUsers] = useState([]);\n    const [selectedMembers, setSelectedMembers] = useState([user._id])\n\n    useEffect(() => {\n        \n        Axios.get(`http://localhost:3001/api/users/allusers`)\n        .then((response) => {\n            setAllUsers(response.data);\n        })\n    }, []);\n\n    const createNewRoomHandler = () => {\n        var secondUser = allUsers.find(function(e) {\n            return e._id == selectedMembers[1];\n          });\n\n          console.log(secondUser)\n\n        var groupChatName = \"\";\n        for(let i = 1; i < selectedMembers.length; i++){\n            var usr = allUsers.find(function(e) {\n                return e._id == selectedMembers[i];\n              });\n            groupChatName += usr.username + \", \"\n        }\n         \n          \n        Axios.post('http://localhost:3001/api/conversations', {\n            members: selectedMembers,\n            conversationImage:  selectedMembers.length == 2 ? \"auto\" : \"/group_avatar.png\",\n            name:  selectedMembers.length == 2 ? \"auto\" : groupChatName,\n\n        }).then(()=>{  window.location.reload();})\n\n      \n    }\n\n\n    return (\n        <div className='create-room'>\n            <div className=\"create-room-wrapper\">\n                <div className=\"create-room-top\">\n                <svg onClick={()=>{setShowCreateRoomWindow(false)}} aria-label=\"Close\" class=\"_8-yf5 \" color=\"#262626\" fill=\"#262626\" height=\"18\" role=\"img\" viewBox=\"0 0 24 24\" width=\"18\"><polyline fill=\"none\" points=\"20.643 3.357 12 12 3.353 20.647\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\"></polyline><line fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" x1=\"20.649\" x2=\"3.354\" y1=\"20.649\" y2=\"3.354\"></line></svg>\n                <h4>New Message</h4>\n                <p \n                onClick={createNewRoomHandler}\n                \n                className='post-comment'>Next</p>\n                </div>\n                <div className=\"create-room-center\">\n                    <h4 htmlFor=\"\">To: </h4>\n                    <input className='add-people-to-room' type=\"text\" name=\"\" placeholder='Search...' id=\"\" />\n                </div>\n                <div className=\"create-room-bottom\">\n                <h4>Suggested</h4>\n\n                {\n                         allUsers.map((u) => (\n                            <label for={u._id} className=\"suggested-chat\">\n                 \n                            <div onClick={()=>{\n                                           // setActiveRoom(c)\n                                        }} \n                                        \n                                       \n                                        className= \"chat-room\" \n                                         key={u._id}\n                                        >                               \n                                        <div className=\"chat-room-icon\">\n                                            <img src={process.env.REACT_APP_PULIC_FOLDER + u.profilePicture} alt=\"\" />\n                                        </div>\n                                        <div className=\"chat-room-info\">\n                                            <div className=\"chat-room-name\">{u.username}</div>\n                                            <div className=\"chat-room-status\">Active now</div>\n                                        </div>                      \n                            </div>\n                            <input id={u._id} className='hidden-check' type=\"checkbox\" name=\"\" onChange={\n                                (e) => {\n                                    if(e.target.checked){\n                                        setSelectedMembers([...selectedMembers, u._id])\n                                    }else{\n                                        setSelectedMembers(selectedMembers.filter(item => item != u._id))\n                                    }\n                                \n                                }\n                            } />\n                            <div className=\"add-user-checkbox\">\n                            <svg aria-label=\"Toggle selection\" class=\"_8-yf5 \" color=\"#0095f6\" fill=\"#0095f6\" height=\"24\" role=\"img\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M12.001.504a11.5 11.5 0 1011.5 11.5 11.513 11.513 0 00-11.5-11.5zm5.706 9.21l-6.5 6.495a1 1 0 01-1.414-.001l-3.5-3.503a1 1 0 111.414-1.414l2.794 2.796L16.293 8.3a1 1 0 011.414 1.415z\"></path></svg>\n                            </div>\n                            </label>\n                        ))\n\n                    }\n\n            </div>\n        </div>\n        </div>\n    )\n}\n","/home/salko/Documents/Instagram-Clone/client/src/reportWebVitals.js",[],{"ruleId":"153","severity":1,"message":"154","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":12},{"ruleId":"153","severity":1,"message":"157","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":16},{"ruleId":"153","severity":1,"message":"158","line":32,"column":10,"nodeType":"155","messageId":"156","endLine":32,"endColumn":16},{"ruleId":"153","severity":1,"message":"159","line":32,"column":18,"nodeType":"155","messageId":"156","endLine":32,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":68,"column":48,"nodeType":"162","messageId":"163","endLine":68,"endColumn":50},{"ruleId":"160","severity":1,"message":"161","line":69,"column":55,"nodeType":"162","messageId":"163","endLine":69,"endColumn":57},{"ruleId":"160","severity":1,"message":"161","line":70,"column":52,"nodeType":"162","messageId":"163","endLine":70,"endColumn":54},{"ruleId":"160","severity":1,"message":"161","line":71,"column":56,"nodeType":"162","messageId":"163","endLine":71,"endColumn":58},{"ruleId":"160","severity":1,"message":"161","line":72,"column":54,"nodeType":"162","messageId":"163","endLine":72,"endColumn":56},{"ruleId":"160","severity":1,"message":"161","line":73,"column":51,"nodeType":"162","messageId":"163","endLine":73,"endColumn":53},{"ruleId":"153","severity":1,"message":"164","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":23},{"ruleId":"153","severity":1,"message":"165","line":6,"column":25,"nodeType":"155","messageId":"156","endLine":6,"endColumn":31},{"ruleId":"153","severity":1,"message":"166","line":6,"column":33,"nodeType":"155","messageId":"156","endLine":6,"endColumn":38},{"ruleId":"167","severity":1,"message":"168","line":102,"column":8,"nodeType":"169","endLine":102,"endColumn":10,"suggestions":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"153","severity":1,"message":"175","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":20},{"ruleId":"153","severity":1,"message":"176","line":28,"column":12,"nodeType":"155","messageId":"156","endLine":28,"endColumn":22},{"ruleId":"153","severity":1,"message":"177","line":28,"column":24,"nodeType":"155","messageId":"156","endLine":28,"endColumn":37},{"ruleId":"153","severity":1,"message":"178","line":33,"column":21,"nodeType":"155","messageId":"156","endLine":33,"endColumn":31},{"ruleId":"167","severity":1,"message":"179","line":106,"column":10,"nodeType":"169","endLine":106,"endColumn":16,"suggestions":"180"},{"ruleId":"160","severity":1,"message":"181","line":150,"column":41,"nodeType":"162","messageId":"163","endLine":150,"endColumn":43},{"ruleId":"153","severity":1,"message":"182","line":1,"column":19,"nodeType":"155","messageId":"156","endLine":1,"endColumn":27},{"ruleId":"171","replacedBy":"183"},{"ruleId":"173","replacedBy":"184"},{"ruleId":"153","severity":1,"message":"182","line":1,"column":19,"nodeType":"155","messageId":"156","endLine":1,"endColumn":27},{"ruleId":"153","severity":1,"message":"185","line":16,"column":18,"nodeType":"155","messageId":"156","endLine":16,"endColumn":29},{"ruleId":"153","severity":1,"message":"186","line":2,"column":19,"nodeType":"155","messageId":"156","endLine":2,"endColumn":28},{"ruleId":"153","severity":1,"message":"187","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":15},{"ruleId":"153","severity":1,"message":"188","line":7,"column":8,"nodeType":"155","messageId":"156","endLine":7,"endColumn":12},{"ruleId":"153","severity":1,"message":"189","line":12,"column":20,"nodeType":"155","messageId":"156","endLine":12,"endColumn":29},{"ruleId":"153","severity":1,"message":"186","line":2,"column":19,"nodeType":"155","messageId":"156","endLine":2,"endColumn":28},{"ruleId":"153","severity":1,"message":"190","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":11},{"ruleId":"153","severity":1,"message":"175","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":20},{"ruleId":"153","severity":1,"message":"191","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":13},{"ruleId":"153","severity":1,"message":"164","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":23},{"ruleId":"153","severity":1,"message":"165","line":3,"column":25,"nodeType":"155","messageId":"156","endLine":3,"endColumn":31},{"ruleId":"153","severity":1,"message":"166","line":3,"column":33,"nodeType":"155","messageId":"156","endLine":3,"endColumn":38},{"ruleId":"153","severity":1,"message":"164","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":23},{"ruleId":"153","severity":1,"message":"165","line":6,"column":25,"nodeType":"155","messageId":"156","endLine":6,"endColumn":31},{"ruleId":"153","severity":1,"message":"166","line":6,"column":33,"nodeType":"155","messageId":"156","endLine":6,"endColumn":38},{"ruleId":"167","severity":1,"message":"192","line":19,"column":4,"nodeType":"169","endLine":19,"endColumn":6,"suggestions":"193"},{"ruleId":"153","severity":1,"message":"194","line":22,"column":8,"nodeType":"155","messageId":"156","endLine":22,"endColumn":20},{"ruleId":"153","severity":1,"message":"195","line":22,"column":22,"nodeType":"155","messageId":"156","endLine":22,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":58,"column":31,"nodeType":"162","messageId":"163","endLine":58,"endColumn":33},{"ruleId":"160","severity":1,"message":"181","line":77,"column":59,"nodeType":"162","messageId":"163","endLine":77,"endColumn":61},{"ruleId":"153","severity":1,"message":"191","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":13},{"ruleId":"153","severity":1,"message":"196","line":2,"column":30,"nodeType":"155","messageId":"156","endLine":2,"endColumn":36},{"ruleId":"153","severity":1,"message":"197","line":4,"column":9,"nodeType":"155","messageId":"156","endLine":4,"endColumn":11},{"ruleId":"153","severity":1,"message":"198","line":14,"column":12,"nodeType":"155","messageId":"156","endLine":14,"endColumn":26},{"ruleId":"153","severity":1,"message":"199","line":15,"column":12,"nodeType":"155","messageId":"156","endLine":15,"endColumn":30},{"ruleId":"153","severity":1,"message":"200","line":15,"column":32,"nodeType":"155","messageId":"156","endLine":15,"endColumn":53},{"ruleId":"160","severity":1,"message":"181","line":29,"column":42,"nodeType":"162","messageId":"163","endLine":29,"endColumn":44},{"ruleId":"167","severity":1,"message":"201","line":34,"column":8,"nodeType":"169","endLine":34,"endColumn":23,"suggestions":"202"},{"ruleId":"160","severity":1,"message":"181","line":58,"column":38,"nodeType":"162","messageId":"163","endLine":58,"endColumn":40},{"ruleId":"160","severity":1,"message":"161","line":62,"column":48,"nodeType":"162","messageId":"163","endLine":62,"endColumn":50},{"ruleId":"160","severity":1,"message":"161","line":70,"column":53,"nodeType":"162","messageId":"163","endLine":70,"endColumn":55},{"ruleId":"167","severity":1,"message":"203","line":90,"column":10,"nodeType":"169","endLine":90,"endColumn":25,"suggestions":"204"},{"ruleId":"160","severity":1,"message":"181","line":116,"column":51,"nodeType":"162","messageId":"163","endLine":116,"endColumn":53},{"ruleId":"160","severity":1,"message":"181","line":39,"column":44,"nodeType":"162","messageId":"163","endLine":39,"endColumn":46},{"ruleId":"167","severity":1,"message":"205","line":42,"column":9,"nodeType":"169","endLine":42,"endColumn":21,"suggestions":"206"},{"ruleId":"167","severity":1,"message":"201","line":60,"column":10,"nodeType":"169","endLine":60,"endColumn":22,"suggestions":"207"},{"ruleId":"160","severity":1,"message":"181","line":86,"column":49,"nodeType":"162","messageId":"163","endLine":86,"endColumn":51},{"ruleId":"160","severity":1,"message":"181","line":102,"column":33,"nodeType":"162","messageId":"163","endLine":102,"endColumn":35},{"ruleId":"160","severity":1,"message":"181","line":21,"column":26,"nodeType":"162","messageId":"163","endLine":21,"endColumn":28},{"ruleId":"160","severity":1,"message":"181","line":29,"column":30,"nodeType":"162","messageId":"163","endLine":29,"endColumn":32},{"ruleId":"160","severity":1,"message":"181","line":37,"column":56,"nodeType":"162","messageId":"163","endLine":37,"endColumn":58},{"ruleId":"160","severity":1,"message":"181","line":38,"column":43,"nodeType":"162","messageId":"163","endLine":38,"endColumn":45},{"ruleId":"160","severity":1,"message":"161","line":89,"column":96,"nodeType":"162","messageId":"163","endLine":89,"endColumn":98},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'logged' is assigned a value but never used.","'setLogged' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'post.comments', 'post.createdAt', 'post.likes', 'post.userId', and 'user._id'. Either include them or remove the dependency array. If 'setComments' needs the current value of 'post.comments', you can also switch to useReducer instead of useState and read 'post.comments' in the reducer.","ArrayExpression",["208"],"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"'PostExpanded' is defined but never used.","'expandPost' is assigned a value but never used.","'setExpandPost' is assigned a value but never used.","'setCaption' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array. If 'setUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["211"],"Expected '===' and instead saw '=='.","'useEfect' is defined but never used.",["209"],["210"],"'setLoginMsg' is assigned a value but never used.","'useEffect' is defined but never used.","'Profile' is defined but never used.","'Post' is defined but never used.","'setActive' is assigned a value but never used.","'Box' is defined but never used.","'Axios' is defined but never used.","React Hook useEffect has missing dependencies: 'post.userId' and 'user.following'. Either include them or remove the dependency array.",["212"],"'filteredUser' is assigned a value but never used.","'setFilteredUser' is assigned a value but never used.","'useRef' is defined but never used.","'io' is defined but never used.","'allChatMembers' is assigned a value but never used.","'conversationStatus' is assigned a value but never used.","'setConversationStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has missing dependencies: 'socket' and 'user._id'. Either include them or remove the dependency array.",["214"],"React Hook useEffect has missing dependencies: 'activeRoom' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["215"],["216"],{"desc":"217","fix":"218"},"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [post.comments, post.createdAt, post.likes, post.userId, user._id]",{"range":"231","text":"232"},"Update the dependencies array to be: [setUser, user]",{"range":"233","text":"234"},"Update the dependencies array to be: [post.userId, user.following]",{"range":"235","text":"236"},"Update the dependencies array to be: [conversations, socket]",{"range":"237","text":"238"},"Update the dependencies array to be: [conversations, socket, user._id]",{"range":"239","text":"240"},"Update the dependencies array to be: [activeRoom, messages, newMessage]",{"range":"241","text":"242"},"Update the dependencies array to be: [activeRoom, socket]",{"range":"243","text":"244"},[3299,3301],"[post.comments, post.createdAt, post.likes, post.userId, user._id]",[3359,3365],"[setUser, user]",[680,682],"[post.userId, user.following]",[1063,1078],"[conversations, socket]",[3102,3117],"[conversations, socket, user._id]",[1399,1411],"[activeRoom, messages, newMessage]",[1976,1988],"[activeRoom, socket]"]